// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/isaac8838/tetris-game/api (interfaces: Helper)
//
// Generated by this command:
//
//	mockgen -package mockapi -destination api/mock/helper.go github.com/isaac8838/tetris-game/api Helper
//

// Package mockapi is a generated GoMock package.
package mockapi

import (
	context "context"
	reflect "reflect"

	db "github.com/isaac8838/tetris-game/db/sqlc"
	gomock "go.uber.org/mock/gomock"
)

// MockHelper is a mock of Helper interface.
type MockHelper struct {
	ctrl     *gomock.Controller
	recorder *MockHelperMockRecorder
}

// MockHelperMockRecorder is the mock recorder for MockHelper.
type MockHelperMockRecorder struct {
	mock *MockHelper
}

// NewMockHelper creates a new mock instance.
func NewMockHelper(ctrl *gomock.Controller) *MockHelper {
	mock := &MockHelper{ctrl: ctrl}
	mock.recorder = &MockHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHelper) EXPECT() *MockHelperMockRecorder {
	return m.recorder
}

// CreateAchievement mocks base method.
func (m *MockHelper) CreateAchievement(arg0 context.Context, arg1 db.Score, arg2 db.DBQTx) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAchievement", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateAchievement indicates an expected call of CreateAchievement.
func (mr *MockHelperMockRecorder) CreateAchievement(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAchievement", reflect.TypeOf((*MockHelper)(nil).CreateAchievement), arg0, arg1, arg2)
}

// DetectedRefreshTokenReused mocks base method.
func (m *MockHelper) DetectedRefreshTokenReused(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DetectedRefreshTokenReused", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DetectedRefreshTokenReused indicates an expected call of DetectedRefreshTokenReused.
func (mr *MockHelperMockRecorder) DetectedRefreshTokenReused(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DetectedRefreshTokenReused", reflect.TypeOf((*MockHelper)(nil).DetectedRefreshTokenReused), arg0)
}
